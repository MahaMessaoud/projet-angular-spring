{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/reservations.service\";\nexport class AddReservationComponent {\n  constructor(fb, sReservation) {\n    this.fb = fb;\n    this.sReservation = sReservation;\n    this.addRes = this.fb.group({\n      anneeUniversite: ['', Validators.required],\n      estValid: ['', Validators.required] // Initialisez à null\n    });\n  }\n\n  onSubmit() {\n    if (this.addRes.valid) {\n      const reservation = this.addRes.value;\n      this.sReservation.addReservation(reservation).subscribe(data => {\n        console.log(data);\n        alert('reservation ajoutée avec succès');\n      });\n    }\n  }\n  static #_ = this.ɵfac = function AddReservationComponent_Factory(t) {\n    return new (t || AddReservationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ReservationsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddReservationComponent,\n    selectors: [[\"app-add-reservation\"]],\n    decls: 13,\n    vars: 1,\n    consts: [[1, \"form-container\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [1, \"form-label\"], [\"type\", \"date\", \"name\", \"dateInput\", \"id\", \"dateInput\"], [\"for\", \"typeChambre\", 1, \"form-label\"], [\"type\", \"radio\", \"name\", \"boolValue\", \"id\", \"trueValue\", \"value\", \"true\"], [\"for\", \"trueValue\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function AddReservationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddReservationComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Annee Universitaire:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Est Valide?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementStart(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Valide\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 7);\n        i0.ɵɵtext(12, \"Ajouter Chambre\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.addRes);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","AddReservationComponent","constructor","fb","sReservation","addRes","group","anneeUniversite","required","estValid","onSubmit","valid","reservation","value","addReservation","subscribe","data","console","log","alert","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","ReservationsService","_2","selectors","decls","vars","consts","template","AddReservationComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AddReservationComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\maham\\Desktop\\Angular-Spring\\miniProjet\\src\\app\\manageReservation\\add-reservation\\add-reservation.component.ts","C:\\Users\\maham\\Desktop\\Angular-Spring\\miniProjet\\src\\app\\manageReservation\\add-reservation\\add-reservation.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ReservationsService } from 'src/app/services/reservations.service';\n\n@Component({\n  selector: 'app-add-reservation',\n  templateUrl: './add-reservation.component.html',\n  styleUrls: ['./add-reservation.component.scss']\n})\nexport class AddReservationComponent {\n  addRes: FormGroup;\n\n\n  constructor(private fb: FormBuilder, private sReservation: ReservationsService) {\n    this.addRes = this.fb.group({\n      anneeUniversite: ['', Validators.required],\n      estValid: ['', Validators.required], // Initialisez à null\n    });\n  }\n\n  onSubmit() {\n    if (this.addRes.valid) {\n      const reservation = this.addRes.value;\n      this.sReservation.addReservation(reservation).subscribe((data) => {\n        console.log(data);\n        alert('reservation ajoutée avec succès');\n      });\n    }\n  }\n}\n","<form [formGroup]=\"addRes\" (ngSubmit)=\"onSubmit()\" class=\"form-container\">\n  <div class=\"form-group\">\n    <label  class=\"form-label\">Annee Universitaire:</label>\n    <input type=\"date\" name=\"dateInput\" id=\"dateInput\">\n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"typeChambre\" class=\"form-label\">Est Valide?</label>\n    <input type=\"radio\" name=\"boolValue\" id=\"trueValue\" value=\"true\">\n<label for=\"trueValue\">Valide</label>\n\n\n\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary\">Ajouter Chambre</button>\n</form>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,uBAAuB;EAIlCC,YAAoBC,EAAe,EAAUC,YAAiC;IAA1D,KAAAD,EAAE,GAAFA,EAAE;IAAuB,KAAAC,YAAY,GAAZA,YAAY;IACvD,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC1BC,eAAe,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC1CC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ,CAAC,CAAE;KACtC,CAAC;EACJ;;EAEAE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,MAAM,CAACM,KAAK,EAAE;MACrB,MAAMC,WAAW,GAAG,IAAI,CAACP,MAAM,CAACQ,KAAK;MACrC,IAAI,CAACT,YAAY,CAACU,cAAc,CAACF,WAAW,CAAC,CAACG,SAAS,CAAEC,IAAI,IAAI;QAC/DC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjBG,KAAK,CAAC,iCAAiC,CAAC;MAC1C,CAAC,CAAC;;EAEN;EAAC,QAAAC,CAAA,G;qBAnBUnB,uBAAuB,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,mBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAvB1B,uBAAuB;IAAA2B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTpCb,EAAA,CAAAe,cAAA,cAA0E;QAA/Cf,EAAA,CAAAgB,UAAA,sBAAAC,0DAAA;UAAA,OAAYH,GAAA,CAAAzB,QAAA,EAAU;QAAA,EAAC;QAChDW,EAAA,CAAAe,cAAA,aAAwB;QACKf,EAAA,CAAAkB,MAAA,2BAAoB;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QACvDnB,EAAA,CAAAoB,SAAA,eAAmD;QAErDpB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAe,cAAA,aAAwB;QACsBf,EAAA,CAAAkB,MAAA,kBAAW;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAC/DnB,EAAA,CAAAoB,SAAA,eAAiE;QACrEpB,EAAA,CAAAe,cAAA,eAAuB;QAAAf,EAAA,CAAAkB,MAAA,cAAM;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAMnCnB,EAAA,CAAAe,cAAA,iBAA8C;QAAAf,EAAA,CAAAkB,MAAA,uBAAe;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;;;QAflEnB,EAAA,CAAAqB,UAAA,cAAAP,GAAA,CAAA9B,MAAA,CAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}