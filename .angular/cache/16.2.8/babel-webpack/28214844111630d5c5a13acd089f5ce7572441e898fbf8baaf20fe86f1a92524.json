{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DetailReservationComponent = class DetailReservationComponent {\n  constructor(route, sReservation, router, ChambreService) {\n    this.route = route;\n    this.sReservation = sReservation;\n    this.router = router;\n    this.ChambreService = ChambreService;\n    this.reservations = [];\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const idParam = params.get('idReservation');\n      if (idParam !== null) {\n        //const resId = +idParam;//persister pour convertir l'id en number\n        this.sReservation.getReservationById(idParam).subscribe(reservation => {\n          this.reservation = reservation;\n        });\n      } else {}\n    });\n  }\n  addReservation() {\n    this.router.navigate(['/gestion-reservation/addRes']); // Naviguer vers la page d'ajout\n  }\n\n  loadChambre() {\n    this.sReservation.getAll().subscribe(data => {\n      this.reservations = data;\n    });\n  }\n  affecterFoyerAuBloc() {\n    console.log('foyer' + this.selectedFoyer);\n    if (this.bloc && this.bloc.idBloc && this.selectedFoyer) {\n      this.blocService.affecterFoyerBloc(this.selectedFoyer, this.bloc.idBloc).subscribe(response => {\n        console.log(response);\n      }, error => {\n        console.error(\"Erreur lors de l'affectation du foyer au bloc :\", error);\n      });\n    } else {\n      console.error(\"Veuillez sélectionner un foyer et assurez-vous que le bloc est correctement défini.\");\n    }\n  }\n};\nDetailReservationComponent = __decorate([Component({\n  selector: 'app-detail-reservation',\n  templateUrl: './detail-reservation.component.html',\n  styleUrls: ['./detail-reservation.component.scss']\n})], DetailReservationComponent);","map":{"version":3,"names":["Component","DetailReservationComponent","constructor","route","sReservation","router","ChambreService","reservations","ngOnInit","paramMap","subscribe","params","idParam","get","getReservationById","reservation","addReservation","navigate","loadChambre","getAll","data","affecterFoyerAuBloc","console","log","selectedFoyer","bloc","idBloc","blocService","affecterFoyerBloc","response","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\maham\\Desktop\\Angular-Spring\\miniProjet\\src\\app\\gestion-reservation\\detail-reservation\\detail-reservation.component.ts"],"sourcesContent":["import { ChambreService } from './../../services/chambre.service';\nimport { Reservations } from './../../model/Reservations';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ReservationsService } from 'src/app/services/reservations.service';\n\n@Component({\n  selector: 'app-detail-reservation',\n  templateUrl: './detail-reservation.component.html',\n  styleUrls: ['./detail-reservation.component.scss']\n})\nexport class DetailReservationComponent implements OnInit {\n  reservation: any;\n  idReservation:any;\n  reservations: Reservations[] = [];\n  selectedFoyer!: number;\n  constructor(\n    private route: ActivatedRoute,\n    private sReservation: ReservationsService,private router:Router,private ChambreService\n  ) {}\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const idParam = params.get('idReservation');\n      if (idParam !== null) {\n        //const resId = +idParam;//persister pour convertir l'id en number\n        this.sReservation.getReservationById(idParam).subscribe(reservation => {\n          this.reservation = reservation;\n        });\n      } else {\n\n      }\n    });\n  }\n  addReservation() {\n    this.router.navigate(['/gestion-reservation/addRes']); // Naviguer vers la page d'ajout\n  }\nloadChambre() {\n    this.sReservation.getAll().subscribe(data => {\n        this.reservations = data;\n    });\n}\n\naffecterFoyerAuBloc() {\n  console.log('foyer'+this.selectedFoyer);\n  if (this.bloc && this.bloc.idBloc && this.selectedFoyer) {\n    this.blocService.affecterFoyerBloc(this.selectedFoyer,this.bloc.idBloc)\n      .subscribe(\n        response => {\n          console.log(response);\n\n        },\n        error => {\n          console.error(\"Erreur lors de l'affectation du foyer au bloc :\", error);\n\n        }\n      );\n  } else {\n    console.error(\"Veuillez sélectionner un foyer et assurez-vous que le bloc est correctement défini.\");\n  }\n}\n}\n"],"mappings":";AAEA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAKrCC,YACUC,KAAqB,EACrBC,YAAiC,EAASC,MAAa,EAASC,cAAc;IAD9E,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,YAAY,GAAZA,YAAY;IAA8B,KAAAC,MAAM,GAANA,MAAM;IAAgB,KAAAC,cAAc,GAAdA,cAAc;IAJxF,KAAAC,YAAY,GAAmB,EAAE;EAK9B;EACHC,QAAQA,CAAA;IACN,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAG,CAAC,eAAe,CAAC;MAC3C,IAAID,OAAO,KAAK,IAAI,EAAE;QACpB;QACA,IAAI,CAACR,YAAY,CAACU,kBAAkB,CAACF,OAAO,CAAC,CAACF,SAAS,CAACK,WAAW,IAAG;UACpE,IAAI,CAACA,WAAW,GAAGA,WAAW;QAChC,CAAC,CAAC;OACH,MAAM,C;IAGT,CAAC,CAAC;EACJ;EACAC,cAAcA,CAAA;IACZ,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;EACzD;;EACFC,WAAWA,CAAA;IACP,IAAI,CAACd,YAAY,CAACe,MAAM,EAAE,CAACT,SAAS,CAACU,IAAI,IAAG;MACxC,IAAI,CAACb,YAAY,GAAGa,IAAI;IAC5B,CAAC,CAAC;EACN;EAEAC,mBAAmBA,CAAA;IACjBC,OAAO,CAACC,GAAG,CAAC,OAAO,GAAC,IAAI,CAACC,aAAa,CAAC;IACvC,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,MAAM,IAAI,IAAI,CAACF,aAAa,EAAE;MACvD,IAAI,CAACG,WAAW,CAACC,iBAAiB,CAAC,IAAI,CAACJ,aAAa,EAAC,IAAI,CAACC,IAAI,CAACC,MAAM,CAAC,CACpEhB,SAAS,CACRmB,QAAQ,IAAG;QACTP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;MAEvB,CAAC,EACDC,KAAK,IAAG;QACNR,OAAO,CAACQ,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MAEzE,CAAC,CACF;KACJ,MAAM;MACLR,OAAO,CAACQ,KAAK,CAAC,qFAAqF,CAAC;;EAExG;CACC;AAjDY7B,0BAA0B,GAAA8B,UAAA,EALtC/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,qCAAqC;CAClD,CAAC,C,EACWjC,0BAA0B,CAiDtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}