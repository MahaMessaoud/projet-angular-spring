{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/chambre.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateChambreComponent {\n  constructor(sChambre, ac, route) {\n    this.sChambre = sChambre;\n    this.ac = ac;\n    this.route = route;\n    this.idChambre = this.ac.snapshot.params['idChambre'];\n  }\n  ngOnInit() {\n    this.sChambre.getChambreById(this.idChambre).subscribe(data => {\n      this.ch = data;\n    });\n  }\n  update() {\n    this.sChambre.updateChambre(this.idChambre, this.ch).subscribe();\n    console.log(this.ch);\n    this.route.navigate(['/allch']);\n  }\n  static #_ = this.ɵfac = function UpdateChambreComponent_Factory(t) {\n    return new (t || UpdateChambreComponent)(i0.ɵɵdirectiveInject(i1.ChambreService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateChambreComponent,\n    selectors: [[\"app-update-chambre\"]],\n    decls: 12,\n    vars: 3,\n    consts: [[3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"id\"], [\"type\", \"text\", \"id\", \"id\", \"name\", \"id\", 1, \"form-control\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n    template: function UpdateChambreComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateChambreComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.update();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateChambreComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.ch.id = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Numero chambre:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateChambreComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.ch.numeroChambre = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵtext(11, \" save\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.ch.id)(\"disabled\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ch.numeroChambre);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["UpdateChambreComponent","constructor","sChambre","ac","route","idChambre","snapshot","params","ngOnInit","getChambreById","subscribe","data","ch","update","updateChambre","console","log","navigate","_","i0","ɵɵdirectiveInject","i1","ChambreService","i2","ActivatedRoute","Router","_2","selectors","decls","vars","consts","template","UpdateChambreComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","UpdateChambreComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","UpdateChambreComponent_Template_input_ngModelChange_5_listener","$event","id","UpdateChambreComponent_Template_input_ngModelChange_9_listener","numeroChambre","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\maham\\Desktop\\Angular-Spring\\miniProjet\\src\\app\\manageChambre\\update-chambre\\update-chambre.component.ts","C:\\Users\\maham\\Desktop\\Angular-Spring\\miniProjet\\src\\app\\manageChambre\\update-chambre\\update-chambre.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ChambreService } from 'src/app/services/chambre.service';\n\n@Component({\n  selector: 'app-update-chambre',\n  templateUrl: './update-chambre.component.html',\n  styleUrls: ['./update-chambre.component.scss']\n})\nexport class UpdateChambreComponent {\nch:any;\nidChambre:any;\nconstructor(private sChambre:ChambreService, private ac:ActivatedRoute, private route:Router) {\n  this.idChambre = this.ac.snapshot.params['idChambre'];\n\n}\nngOnInit() {\n  this.sChambre.getChambreById(this.idChambre).subscribe(data => {\n    this.ch = data;\n  });\n}\nupdate() {\n  this.sChambre.updateChambre(this.idChambre,this.ch).subscribe();\nconsole.log(this.ch);\n  this.route.navigate(['/allch']);\n\n}\n}\n","<form (ngSubmit)=\"update()\">\n  <div class=\"form-group\">\n    <label for=\"id\">ID</label>\n    <div class=\"form-group\">\n      <input type=\"text\" id=\"id\" name=\"id\" [(ngModel)]=\"ch.id\" [disabled]=\"true\" class=\"form-control\">\n    </div>\n      </div>\n  <div class=\"form-group\">\n    <label for=\"description\">Numero chambre:</label>\n    <input type=\"text\" id=\"description\" name=\"description\" [(ngModel)]=\"ch.numeroChambre\" class=\"form-control\">\n\n<button type=\"submit\" > save</button>\n\n  </div>\n</form>\n"],"mappings":";;;;AASA,OAAM,MAAOA,sBAAsB;EAGnCC,YAAoBC,QAAuB,EAAUC,EAAiB,EAAUC,KAAY;IAAxE,KAAAF,QAAQ,GAARA,QAAQ;IAAyB,KAAAC,EAAE,GAAFA,EAAE;IAAyB,KAAAC,KAAK,GAALA,KAAK;IACnF,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACG,QAAQ,CAACC,MAAM,CAAC,WAAW,CAAC;EAEvD;EACAC,QAAQA,CAAA;IACN,IAAI,CAACN,QAAQ,CAACO,cAAc,CAAC,IAAI,CAACJ,SAAS,CAAC,CAACK,SAAS,CAACC,IAAI,IAAG;MAC5D,IAAI,CAACC,EAAE,GAAGD,IAAI;IAChB,CAAC,CAAC;EACJ;EACAE,MAAMA,CAAA;IACJ,IAAI,CAACX,QAAQ,CAACY,aAAa,CAAC,IAAI,CAACT,SAAS,EAAC,IAAI,CAACO,EAAE,CAAC,CAACF,SAAS,EAAE;IACjEK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,EAAE,CAAC;IAClB,IAAI,CAACR,KAAK,CAACa,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAEjC;EAAC,QAAAC,CAAA,G;qBAjBYlB,sBAAsB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAE,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtB1B,sBAAsB;IAAA2B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTnCd,EAAA,CAAAgB,cAAA,cAA4B;QAAtBhB,EAAA,CAAAiB,UAAA,sBAAAC,yDAAA;UAAA,OAAYH,GAAA,CAAArB,MAAA,EAAQ;QAAA,EAAC;QACzBM,EAAA,CAAAgB,cAAA,aAAwB;QACNhB,EAAA,CAAAmB,MAAA,SAAE;QAAAnB,EAAA,CAAAoB,YAAA,EAAQ;QAC1BpB,EAAA,CAAAgB,cAAA,aAAwB;QACehB,EAAA,CAAAiB,UAAA,2BAAAI,+DAAAC,MAAA;UAAA,OAAAP,GAAA,CAAAtB,EAAA,CAAA8B,EAAA,GAAAD,MAAA;QAAA,EAAmB;QAAxDtB,EAAA,CAAAoB,YAAA,EAAgG;QAGpGpB,EAAA,CAAAgB,cAAA,aAAwB;QACGhB,EAAA,CAAAmB,MAAA,sBAAe;QAAAnB,EAAA,CAAAoB,YAAA,EAAQ;QAChDpB,EAAA,CAAAgB,cAAA,eAA2G;QAApDhB,EAAA,CAAAiB,UAAA,2BAAAO,+DAAAF,MAAA;UAAA,OAAAP,GAAA,CAAAtB,EAAA,CAAAgC,aAAA,GAAAH,MAAA;QAAA,EAA8B;QAArFtB,EAAA,CAAAoB,YAAA,EAA2G;QAE/GpB,EAAA,CAAAgB,cAAA,iBAAuB;QAAChB,EAAA,CAAAmB,MAAA,aAAI;QAAAnB,EAAA,CAAAoB,YAAA,EAAS;;;QAPMpB,EAAA,CAAA0B,SAAA,GAAmB;QAAnB1B,EAAA,CAAA2B,UAAA,YAAAZ,GAAA,CAAAtB,EAAA,CAAA8B,EAAA,CAAmB;QAKHvB,EAAA,CAAA0B,SAAA,GAA8B;QAA9B1B,EAAA,CAAA2B,UAAA,YAAAZ,GAAA,CAAAtB,EAAA,CAAAgC,aAAA,CAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}