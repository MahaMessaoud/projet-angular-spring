{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ReservationsService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:8082';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/Json'\n      })\n    };\n  }\n  getAllReservations() {\n    return this.http.get('http://localhost:8082/allReservation');\n  }\n  addReservation(reservation) {\n    return this.http.post(this.url + '/addReservation', reservation);\n  }\n  deleteReservation(reser) {\n    return this.http.delete('http://localhost:8082/deleteRes/' + reser.idReservation);\n  }\n  getReservationById(id) {\n    return this.http.get('http://localhost:8082/reservationbyId/' + id);\n  }\n  updateReservation(id, reservation) {\n    return this.http.put('http://localhost:8082/updateRes/' + id, reservation);\n  }\n  affecterReservationChambre(idReservation, idChambre) {\n    return this.http.put(this.url + '/affecterReservationAChambre/' + idReservation + '/' + idChambre, null);\n  }\n  desaffacterReservationChambre(idReservation, idChambre) {}\n  static #_ = this.ɵfac = function ReservationsService_Factory(t) {\n    return new (t || ReservationsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReservationsService,\n    factory: ReservationsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","ReservationsService","constructor","http","url","httpOptions","headers","getAllReservations","get","addReservation","reservation","post","deleteReservation","reser","delete","idReservation","getReservationById","id","updateReservation","put","affecterReservationChambre","idChambre","desaffacterReservationChambre","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\maham\\Desktop\\Angular-Spring\\miniProjet\\src\\app\\services\\reservations.service.ts"],"sourcesContent":["import { Reservations } from './../model/Reservations';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReservationsService {\n  private url: String = 'http://localhost:8082';\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/Json' }),\n  };\n\n  constructor(private http: HttpClient) {}\n  getAllReservations() {\n    return this.http.get('http://localhost:8082/allReservation');\n  }\n  addReservation(reservation: any) {\n    return this.http.post(this.url + '/addReservation', reservation);  }\n  deleteReservation(reser:Reservations):Observable<Reservations>{\n    return this.http.delete<Reservations>('http://localhost:8082/deleteRes/'+reser.idReservation );\n  }\n\n  getReservationById(id: any) {\n    return this.http.get('http://localhost:8082/reservationbyId/' + id);\n   }\n\n  updateReservation(id: number, reservation: Reservations): Observable<Reservations> {\n    return this.http.put<Reservations>( 'http://localhost:8082/updateRes/' + id, reservation);\n  }\n  affecterReservationChambre(idReservation: String, idChambre: number): Observable<string> {\n    return this.http.put<string>(this.url + '/affecterReservationAChambre/' + idReservation + '/' + idChambre, null);\n  }\n  desaffacterReservationChambre(idReservation: String, idChambre: number): Observable<string> {\n}\n"],"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,mBAAmB;EAM9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALhB,KAAAC,GAAG,GAAW,uBAAuB;IAC7C,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIN,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAEsC;EACvCO,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,sCAAsC,CAAC;EAC9D;EACAC,cAAcA,CAACC,WAAgB;IAC7B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,GAAG,GAAG,iBAAiB,EAAEM,WAAW,CAAC;EAAG;EACrEE,iBAAiBA,CAACC,KAAkB;IAClC,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAe,kCAAkC,GAACD,KAAK,CAACE,aAAa,CAAE;EAChG;EAEAC,kBAAkBA,CAACC,EAAO;IACxB,OAAO,IAAI,CAACd,IAAI,CAACK,GAAG,CAAC,wCAAwC,GAAGS,EAAE,CAAC;EACpE;EAEDC,iBAAiBA,CAACD,EAAU,EAAEP,WAAyB;IACrD,OAAO,IAAI,CAACP,IAAI,CAACgB,GAAG,CAAgB,kCAAkC,GAAGF,EAAE,EAAEP,WAAW,CAAC;EAC3F;EACAU,0BAA0BA,CAACL,aAAqB,EAAEM,SAAiB;IACjE,OAAO,IAAI,CAAClB,IAAI,CAACgB,GAAG,CAAS,IAAI,CAACf,GAAG,GAAG,+BAA+B,GAAGW,aAAa,GAAG,GAAG,GAAGM,SAAS,EAAE,IAAI,CAAC;EAClH;EACAC,6BAA6BA,CAACP,aAAqB,EAAEM,SAAiB,GACxE;EAAC,QAAAE,CAAA,G;qBA3BYtB,mBAAmB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAnB3B,mBAAmB;IAAA4B,OAAA,EAAnB5B,mBAAmB,CAAA6B,IAAA;IAAAC,UAAA,EAFlB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}