{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DetailReservationComponent = class DetailReservationComponent {\n  constructor(route, sReservation, router, chambreService) {\n    this.route = route;\n    this.sReservation = sReservation;\n    this.router = router;\n    this.chambreService = chambreService;\n    this.chambres = [];\n  }\n  ngOnInit() {\n    this.loadChambre();\n    this.route.paramMap.subscribe(params => {\n      const idParam = params.get('idReservation');\n      if (idParam !== null) {\n        //const resId = +idParam;//persister pour convertir l'id en number\n        this.sReservation.getReservationById(idParam).subscribe(reservation => {\n          this.reservation = reservation;\n        });\n      } else {}\n    });\n  }\n  addReservation() {\n    this.router.navigate(['/gestion-reservation/addRes']); // Naviguer vers la page d'ajout\n  }\n\n  loadChambre() {\n    this.chambreService.getAllChambre().subscribe(data => {\n      this.chambres = data;\n    });\n  }\n  affecterReservationAChambre() {\n    console.log('chambre' + this.selectedchambres);\n    if (this.reservation && this.reservation.idReservation && this.selectedchambres) {\n      this.sReservation.affecterReservationChambre(this.reservation.idReservation, this.selectedchambres).subscribe(response => {\n        console.log(response);\n      }, error => {\n        console.error(\"Erreur lors de l'affectation du reservation au chambre :\", error);\n      });\n    } else {\n      console.error(\"Veuillez sélectionner un reservation et assurez-vous que le chambre est correctement défini.\");\n    }\n  }\n  desaffecterReservationDeChambre() {\n    console.log('chambre' + this.selectedchambres);\n    if (this.reservation && this.reservation.idReservation) {\n      this.sReservation.desaffacterReservationChambre(this.reservation.idReservation).subscribe(response => {\n        console.log(response);\n      }, error => {\n        console.error(\"Erreur lors de la désaffectation de la réservation de la chambre :\", error);\n      });\n    } else {\n      console.error(\"Veuillez sélectionner une réservation.\");\n    }\n  }\n};\nDetailReservationComponent = __decorate([Component({\n  selector: 'app-detail-reservation',\n  templateUrl: './detail-reservation.component.html',\n  styleUrls: ['./detail-reservation.component.scss']\n})], DetailReservationComponent);","map":{"version":3,"names":["Component","DetailReservationComponent","constructor","route","sReservation","router","chambreService","chambres","ngOnInit","loadChambre","paramMap","subscribe","params","idParam","get","getReservationById","reservation","addReservation","navigate","getAllChambre","data","affecterReservationAChambre","console","log","selectedchambres","idReservation","affecterReservationChambre","response","error","desaffecterReservationDeChambre","desaffacterReservationChambre","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\maham\\Desktop\\Angular-Spring\\miniProjet\\src\\app\\gestion-reservation\\detail-reservation\\detail-reservation.component.ts"],"sourcesContent":["import { ChambreService } from './../../services/chambre.service';\nimport { Reservations } from './../../model/Reservations';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ReservationsService } from 'src/app/services/reservations.service';\nimport { Chambre } from 'src/app/model/Chambre';\n\n@Component({\n  selector: 'app-detail-reservation',\n  templateUrl: './detail-reservation.component.html',\n  styleUrls: ['./detail-reservation.component.scss']\n})\nexport class DetailReservationComponent implements OnInit {\n  reservation: any;\n  idReservation:any;\n  chambres: Chambre[] = [];\n  selectedchambres!: number;\n  constructor(\n    private route: ActivatedRoute,\n    private sReservation: ReservationsService,private router:Router,private chambreService:ChambreService\n  ) {}\n  ngOnInit() {\n    this.loadChambre();\n    this.route.paramMap.subscribe(params => {\n      const idParam = params.get('idReservation');\n      if (idParam !== null) {\n        //const resId = +idParam;//persister pour convertir l'id en number\n        this.sReservation.getReservationById(idParam).subscribe(reservation => {\n          this.reservation = reservation;\n        });\n      } else {\n\n      }\n    });\n  }\n  addReservation() {\n    this.router.navigate(['/gestion-reservation/addRes']); // Naviguer vers la page d'ajout\n  }\nloadChambre() {\n    this.chambreService.getAllChambre().subscribe((data: any) => {\n      this.chambres = data;\n    });\n}\n\naffecterReservationAChambre() {\n  console.log('chambre'+this.selectedchambres);\n  if (this.reservation && this.reservation.idReservation && this.selectedchambres) {\n    this.sReservation.affecterReservationChambre(this.reservation.idReservation,this.selectedchambres)\n      .subscribe(\n        response => {\n          console.log(response);\n\n        },\n        error => {\n          console.error(\"Erreur lors de l'affectation du reservation au chambre :\", error);\n\n        }\n      );\n  } else {\n    console.error(\"Veuillez sélectionner un reservation et assurez-vous que le chambre est correctement défini.\");\n  }\n}\n\ndesaffecterReservationDeChambre() {\n  console.log('chambre' + this.selectedchambres);\n  if (this.reservation && this.reservation.idReservation) {\n    this.sReservation.desaffacterReservationChambre(this.reservation.idReservation)\n      .subscribe(\n        response => {\n          console.log(response);\n\n        },\n        error => {\n          console.error(\"Erreur lors de la désaffectation de la réservation de la chambre :\", error);\n        }\n      );\n  } else {\n    console.error(\"Veuillez sélectionner une réservation.\");\n  }\n}\n\n}\n"],"mappings":";AAEA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAKrCC,YACUC,KAAqB,EACrBC,YAAiC,EAASC,MAAa,EAASC,cAA6B;IAD7F,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,YAAY,GAAZA,YAAY;IAA8B,KAAAC,MAAM,GAANA,MAAM;IAAgB,KAAAC,cAAc,GAAdA,cAAc;IAJxF,KAAAC,QAAQ,GAAc,EAAE;EAKrB;EACHC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAG,CAAC,eAAe,CAAC;MAC3C,IAAID,OAAO,KAAK,IAAI,EAAE;QACpB;QACA,IAAI,CAACT,YAAY,CAACW,kBAAkB,CAACF,OAAO,CAAC,CAACF,SAAS,CAACK,WAAW,IAAG;UACpE,IAAI,CAACA,WAAW,GAAGA,WAAW;QAChC,CAAC,CAAC;OACH,MAAM,C;IAGT,CAAC,CAAC;EACJ;EACAC,cAAcA,CAAA;IACZ,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;EACzD;;EACFT,WAAWA,CAAA;IACP,IAAI,CAACH,cAAc,CAACa,aAAa,EAAE,CAACR,SAAS,CAAES,IAAS,IAAI;MAC1D,IAAI,CAACb,QAAQ,GAAGa,IAAI;IACtB,CAAC,CAAC;EACN;EAEAC,2BAA2BA,CAAA;IACzBC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAC,IAAI,CAACC,gBAAgB,CAAC;IAC5C,IAAI,IAAI,CAACR,WAAW,IAAI,IAAI,CAACA,WAAW,CAACS,aAAa,IAAI,IAAI,CAACD,gBAAgB,EAAE;MAC/E,IAAI,CAACpB,YAAY,CAACsB,0BAA0B,CAAC,IAAI,CAACV,WAAW,CAACS,aAAa,EAAC,IAAI,CAACD,gBAAgB,CAAC,CAC/Fb,SAAS,CACRgB,QAAQ,IAAG;QACTL,OAAO,CAACC,GAAG,CAACI,QAAQ,CAAC;MAEvB,CAAC,EACDC,KAAK,IAAG;QACNN,OAAO,CAACM,KAAK,CAAC,0DAA0D,EAAEA,KAAK,CAAC;MAElF,CAAC,CACF;KACJ,MAAM;MACLN,OAAO,CAACM,KAAK,CAAC,8FAA8F,CAAC;;EAEjH;EAEAC,+BAA+BA,CAAA;IAC7BP,OAAO,CAACC,GAAG,CAAC,SAAS,GAAG,IAAI,CAACC,gBAAgB,CAAC;IAC9C,IAAI,IAAI,CAACR,WAAW,IAAI,IAAI,CAACA,WAAW,CAACS,aAAa,EAAE;MACtD,IAAI,CAACrB,YAAY,CAAC0B,6BAA6B,CAAC,IAAI,CAACd,WAAW,CAACS,aAAa,CAAC,CAC5Ed,SAAS,CACRgB,QAAQ,IAAG;QACTL,OAAO,CAACC,GAAG,CAACI,QAAQ,CAAC;MAEvB,CAAC,EACDC,KAAK,IAAG;QACNN,OAAO,CAACM,KAAK,CAAC,oEAAoE,EAAEA,KAAK,CAAC;MAC5F,CAAC,CACF;KACJ,MAAM;MACLN,OAAO,CAACM,KAAK,CAAC,wCAAwC,CAAC;;EAE3D;CAEC;AArEY3B,0BAA0B,GAAA8B,UAAA,EALtC/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,qCAAqC;CAClD,CAAC,C,EACWjC,0BAA0B,CAqEtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}