{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/reservations.service\";\nimport * as i3 from \"@angular/common\";\nfunction AddReservationComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r1.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r1.value);\n  }\n}\nexport class AddReservationComponent {\n  constructor(fb, sReservation) {\n    this.fb = fb;\n    this.sReservation = sReservation;\n    this.addRes = this.fb.group({\n      anneeUniversite: ['', Validators.required],\n      estValid: ['', Validators.required] // Initialisez à null\n    });\n  }\n\n  onSubmit() {\n    if (this.addRes.valid) {\n      const reservation = this.addRes.value;\n      this.sReservation.addReservation(reservation).subscribe(data => {\n        console.log(data);\n        alert('reservation ajoutée avec succès');\n      });\n    }\n  }\n  static #_ = this.ɵfac = function AddReservationComponent_Factory(t) {\n    return new (t || AddReservationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ReservationsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddReservationComponent,\n    selectors: [[\"app-add-reservation\"]],\n    decls: 13,\n    vars: 4,\n    consts: [[1, \"form-container\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [1, \"form-label\"], [\"type\", \"number\", \"id\", \"numeroChambre\", \"formControlName\", \"numeroChambre\", 1, \"form-control\"], [\"for\", \"typeChambre\", 1, \"form-label\"], [\"id\", \"typeChambre\", \"formControlName\", \"typeChambre\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"value\"]],\n    template: function AddReservationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddReservationComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Annee Universitaire:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Type de Chambre:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 5);\n        i0.ɵɵtemplate(9, AddReservationComponent_option_9_Template, 2, 2, \"option\", 6);\n        i0.ɵɵpipe(10, \"keyvalue\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 7);\n        i0.ɵɵtext(12, \"Ajouter Chambre\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.addRes);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 2, ctx.typeChambre));\n      }\n    },\n    dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.KeyValuePipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","type_r1","key","ɵɵadvance","ɵɵtextInterpolate","value","AddReservationComponent","constructor","fb","sReservation","addRes","group","anneeUniversite","required","estValid","onSubmit","valid","reservation","addReservation","subscribe","data","console","log","alert","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ReservationsService","_2","selectors","decls","vars","consts","template","AddReservationComponent_Template","rf","ctx","ɵɵlistener","AddReservationComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","AddReservationComponent_option_9_Template","ɵɵpipeBind1","typeChambre"],"sources":["C:\\Users\\maham\\Desktop\\Angular-Spring\\miniProjet\\src\\app\\manageReservation\\add-reservation\\add-reservation.component.ts","C:\\Users\\maham\\Desktop\\Angular-Spring\\miniProjet\\src\\app\\manageReservation\\add-reservation\\add-reservation.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ReservationsService } from 'src/app/services/reservations.service';\n\n@Component({\n  selector: 'app-add-reservation',\n  templateUrl: './add-reservation.component.html',\n  styleUrls: ['./add-reservation.component.scss']\n})\nexport class AddReservationComponent {\n  addRes: FormGroup;\n\n\n  constructor(private fb: FormBuilder, private sReservation: ReservationsService) {\n    this.addRes = this.fb.group({\n      anneeUniversite: ['', Validators.required],\n      estValid: ['', Validators.required], // Initialisez à null\n    });\n  }\n\n  onSubmit() {\n    if (this.addRes.valid) {\n      const reservation = this.addRes.value;\n      this.sReservation.addReservation(reservation).subscribe((data) => {\n        console.log(data);\n        alert('reservation ajoutée avec succès');\n      });\n    }\n  }\n}\n","<form [formGroup]=\"addRes\" (ngSubmit)=\"onSubmit()\" class=\"form-container\">\n  <div class=\"form-group\">\n    <label  class=\"form-label\">Annee Universitaire:</label>\n    <input\n      type=\"number\"\n      id=\"numeroChambre\"\n      formControlName=\"numeroChambre\"\n      class=\"form-control\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"typeChambre\" class=\"form-label\">Type de Chambre:</label>\n    <select id=\"typeChambre\" formControlName=\"typeChambre\" class=\"form-control\">\n      <option *ngFor=\"let type of typeChambre | keyvalue\" [value]=\"type.key\">{{ type.value }}</option>\n    </select>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary\">Ajouter Chambre</button>\n</form>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICY7DC,EAAA,CAAAC,cAAA,gBAAuE;IAAAD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAA5CH,EAAA,CAAAI,UAAA,UAAAC,OAAA,CAAAC,GAAA,CAAkB;IAACN,EAAA,CAAAO,SAAA,GAAgB;IAAhBP,EAAA,CAAAQ,iBAAA,CAAAH,OAAA,CAAAI,KAAA,CAAgB;;;ADJ7F,OAAM,MAAOC,uBAAuB;EAIlCC,YAAoBC,EAAe,EAAUC,YAAiC;IAA1D,KAAAD,EAAE,GAAFA,EAAE;IAAuB,KAAAC,YAAY,GAAZA,YAAY;IACvD,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC1BC,eAAe,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACkB,QAAQ,CAAC;MAC1CC,QAAQ,EAAE,CAAC,EAAE,EAAEnB,UAAU,CAACkB,QAAQ,CAAC,CAAE;KACtC,CAAC;EACJ;;EAEAE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,MAAM,CAACM,KAAK,EAAE;MACrB,MAAMC,WAAW,GAAG,IAAI,CAACP,MAAM,CAACL,KAAK;MACrC,IAAI,CAACI,YAAY,CAACS,cAAc,CAACD,WAAW,CAAC,CAACE,SAAS,CAAEC,IAAI,IAAI;QAC/DC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjBG,KAAK,CAAC,iCAAiC,CAAC;MAC1C,CAAC,CAAC;;EAEN;EAAC,QAAAC,CAAA,G;qBAnBUlB,uBAAuB,EAAAV,EAAA,CAAA6B,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAA/B,EAAA,CAAA6B,iBAAA,CAAAG,EAAA,CAAAC,mBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAvBxB,uBAAuB;IAAAyB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTpCzC,EAAA,CAAAC,cAAA,cAA0E;QAA/CD,EAAA,CAAA2C,UAAA,sBAAAC,0DAAA;UAAA,OAAYF,GAAA,CAAAvB,QAAA,EAAU;QAAA,EAAC;QAChDnB,EAAA,CAAAC,cAAA,aAAwB;QACKD,EAAA,CAAAE,MAAA,2BAAoB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACvDH,EAAA,CAAA6C,SAAA,eAKE;QACJ7C,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,aAAwB;QACsBD,EAAA,CAAAE,MAAA,uBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACpEH,EAAA,CAAAC,cAAA,gBAA4E;QAC1ED,EAAA,CAAA8C,UAAA,IAAAC,yCAAA,oBAAgG;;QAClG/C,EAAA,CAAAG,YAAA,EAAS;QAGXH,EAAA,CAAAC,cAAA,iBAA8C;QAAAD,EAAA,CAAAE,MAAA,uBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAjBlEH,EAAA,CAAAI,UAAA,cAAAsC,GAAA,CAAA5B,MAAA,CAAoB;QAaKd,EAAA,CAAAO,SAAA,GAAyB;QAAzBP,EAAA,CAAAI,UAAA,YAAAJ,EAAA,CAAAgD,WAAA,QAAAN,GAAA,CAAAO,WAAA,EAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}