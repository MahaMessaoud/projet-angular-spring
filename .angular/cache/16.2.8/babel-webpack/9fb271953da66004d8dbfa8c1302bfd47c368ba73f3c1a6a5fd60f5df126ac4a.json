{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChambreService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:8082';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/Json'\n      })\n    };\n  }\n  getAllChambre() {\n    return this.http.get('http://localhost:8082/allChambre');\n  }\n  addChambre(chambre) {\n    return this.http.post(this.url + '/addChambre', chambre);\n  }\n  deleteChambre(ch) {\n    return this.http.delete(http); //localhost:8082/chambre//deleteChambre/'+ch);\n  }\n\n  getChambreById(id) {\n    return this.http.get('http://localhost:8082/chambre/' + id);\n  }\n  updateChambre(id, chambre) {\n    return this.http.put(this.url + '/updateChambre/' + id, chambre);\n  }\n  static #_ = this.ɵfac = function ChambreService_Factory(t) {\n    return new (t || ChambreService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChambreService,\n    factory: ChambreService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","ChambreService","constructor","http","url","httpOptions","headers","getAllChambre","get","addChambre","chambre","post","deleteChambre","ch","delete","getChambreById","id","updateChambre","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\maham\\Desktop\\Angular-Spring\\miniProjet\\src\\app\\services\\chambre.service.ts"],"sourcesContent":["import { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Chambre } from '../model/Chambre';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChambreService {\n  private url: String = 'http://localhost:8082';\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/Json' }),\n  };\n  constructor(private http:HttpClient) { }\n  getAllChambre(){\n    return this.http.get('http://localhost:8082/allChambre');\n  }\n  addChambre(chambre:any){\n    return this.http.post(this.url+'/addChambre',chambre);\n  }\n  deleteChambre(ch:Chambre):Observable<Chambre>{\n    return this.http.delete<Chambre>(http://localhost:8082/chambre//deleteChambre/'+ch);\n\n  }\n  getChambreById(id:any){\n    return this.http.get('http://localhost:8082/chambre/'+id);\n  }\n  updateChambre(id:number,chambre:Chambre): Observable<Chambre> {\n    return this.http.put<Chambre>(this.url+'/updateChambre/'+id,chambre);\n  }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAoB,sBAAsB;;;AAQ9D,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,GAAG,GAAW,uBAAuB;IAC7C,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIN,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EACsC;EACvCO,aAAaA,CAAA;IACX,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,kCAAkC,CAAC;EAC1D;EACAC,UAAUA,CAACC,OAAW;IACpB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,GAAG,GAAC,aAAa,EAACM,OAAO,CAAC;EACvD;EACAE,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAUX,IAAI,CAAC;EAExC;;EACAY,cAAcA,CAACC,EAAM;IACnB,OAAO,IAAI,CAACb,IAAI,CAACK,GAAG,CAAC,gCAAgC,GAACQ,EAAE,CAAC;EAC3D;EACAC,aAAaA,CAACD,EAAS,EAACN,OAAe;IACrC,OAAO,IAAI,CAACP,IAAI,CAACe,GAAG,CAAU,IAAI,CAACd,GAAG,GAAC,iBAAiB,GAACY,EAAE,EAACN,OAAO,CAAC;EACtE;EAAC,QAAAS,CAAA,G;qBArBUlB,cAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdvB,cAAc;IAAAwB,OAAA,EAAdxB,cAAc,CAAAyB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}